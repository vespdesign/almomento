import React, { useState, useEffect } from 'react';
import axios from './api/axiosConfig';
import MapaEventos from './components/MapaEventos';
import FormularioEvento from './components/FormularioEvento';
import './App.css';

const App = () => {
    const [eventos, setEventos] = useState([]);
    const [ubicacion, setUbicacion] = useState({ latitud: null, longitud: null });
    const [loading, setLoading] = useState(true);

    const fetchEventos = async () => {
        try {
            const response = await axios.get('/api/eventos');
            setEventos(response.data);
        } catch (error) {
            console.error("Hubo un error al obtener los eventos:", error);
        }
    };

    const fetchUbicacion = async () => {
        try {
            const response = await fetch('https://ipapi.co/json/');
            const data = await response.json();
            setUbicacion({ latitud: data.latitude, longitud: data.longitude });
            setLoading(false);
        } catch (error) {
            console.error("Hubo un error al obtener la ubicación:", error);
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchEventos();
        fetchUbicacion();
    }, []);

    const handleMarkerDragEnd = (lat, lng) => {
        setUbicacion({ latitud: lat, longitud: lng });
    };

    const handleEventoCreado = () => {
        fetchEventos();
        // Mueve el marcador un poco a la derecha
        setUbicacion(prevUbicacion => ({
            latitud: prevUbicacion.latitud,
            longitud: prevUbicacion.longitud + 0.0001
        }));
    };

    if (loading) {
        return <div>Cargando...</div>;
    }

    return (
        <div className="App">
            <h1>Eventos</h1>
            <FormularioEvento 
                latitud={ubicacion.latitud} 
                longitud={ubicacion.longitud} 
                onEventoCreado={handleEventoCreado} 
            />
            <MapaEventos 
                eventos={eventos} 
                latitud={ubicacion.latitud} 
                longitud={ubicacion.longitud} 
                onMarkerDragEnd={handleMarkerDragEnd} 
                initialPosition={[ubicacion.latitud, ubicacion.longitud]} // Ubicación inicial del mapa
            />
            <h2>Últimos eventos añadidos</h2>
            <div>
                {eventos.map(evento => (
                    <div key={evento.id}>
                        <h3>{evento.titulo}</h3>
                        <p>{evento.descripcion}</p>
                        <p>{evento.latitud}, {evento.longitud}</p>
                        <p>{new Date(evento.tiempo_expiracion).toLocaleString()}</p>
                    </div>
                ))}
            </div>
        </div>
    );
};

export default App;
